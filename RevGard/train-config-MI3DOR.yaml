data:
  dataset:
    name: MI3DOR
    root_path: data/MI3DOR # /path/to/dataset/root
    source: 0 # source train domain index
    target: 1 # target train domain index
    source_test: 2 # source test domain index
    target_test: 3 # target test domain index
    n_classes: 21 # number of classes
    n_views: 4 # number of views of 3D models
    
  dataloader:
    class_balance: true #
    data_workers: 0 # how many workers to use for train dataloaders
    batch_size: 72 # batch_size for source domain and target domain respectively

model:
  base_model: resnet50 # choices=['resnet50', 'vgg16', 'alexnet']
  pretrained_model: data/pytorchModels/resnet50-19c8e357.pth # /path/to/pretrained/model

train:
  min_step: 20000 # minimum steps to run. run epochs until it exceeds the minStep
  lr: 0.01 # learning rate for new layers. learning rate for finetune is 1/10 of lr
  weight_decay: 0.0005
  momentum: 0.9

test:
  test_interval: 500 # interval of two continuous test phase
  test_only: False # test a given model and exit
  resume_file: # model to test

misc:
  gpus: 1 # how many GPUs to be used, 0 indicates CPU only

log:
  root_dir: log # the log directory (log directory will be {root_dir}/{method}/time/)
  log_interval: 10 # steps to log scalars
